const express = require('express');
const axios = require('axios');
const session = require('express-session');
const path = require('path');
const fs = require('fs');
require('dotenv').config();

const app = express();
const bot = require('./bot'); // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ö‡∏≠‡∏ó Discord

// Middleware ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö session
app.use(session({
  secret: process.env.SESSION_SECRET,
  resave: false,
  saveUninitialized: false
}));

// ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å public/
app.use(express.static(path.join(__dirname, 'public')));

// ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
app.get('/', (req, res) => {
  res.send(`
    <h1>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö!</h1>
    <a href="/auth/discord">
      <img src="https://img.shields.io/badge/‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢%20Discord-7289DA?style=for-the-badge&logo=discord&logoColor=white"/>
    </a>
  `);
});

// /login ‚Üí redirect ‡πÑ‡∏õ auth
app.get('/login', (req, res) => {
  res.redirect('/auth/discord');
});

// ‡∏•‡∏¥‡∏á‡∏Å‡πå OAuth2
app.get('/auth/discord', (req, res) => {
  const redirect = `https://discord.com/oauth2/authorize?client_id=${process.env.CLIENT_ID}&redirect_uri=${encodeURIComponent(process.env.REDIRECT_URI)}&response_type=code&scope=identify`;
  res.redirect(redirect);
});

// Callback ‡∏´‡∏•‡∏±‡∏á Discord Login
app.get('/auth/discord/callback', async (req, res) => {
  const code = req.query.code;
  if (!code) return res.send("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ code ‡∏™‡πà‡∏á‡∏°‡∏≤");

  try {
    // ‡∏Ç‡∏≠ access_token
    const tokenRes = await axios.post('https://discord.com/api/oauth2/token', new URLSearchParams({
      client_id: process.env.CLIENT_ID,
      client_secret: process.env.CLIENT_SECRET,
      grant_type: 'authorization_code',
      code,
      redirect_uri: process.env.REDIRECT_URI,
      scope: 'identify'
    }), {
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
    });

    const access_token = tokenRes.data.access_token;

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const userRes = await axios.get('https://discord.com/api/users/@me', {
      headers: { Authorization: `Bearer ${access_token}` }
    });

    const user = userRes.data;
    req.session.user = user;

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å token ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
    const tokenFile = path.join(__dirname, 'tokens.json');
    let tokenMap = {};
    if (fs.existsSync(tokenFile)) {
      tokenMap = JSON.parse(fs.readFileSync(tokenFile, 'utf8'));
    }
    tokenMap[user.id] = access_token;
    fs.writeFileSync(tokenFile, JSON.stringify(tokenMap, null, 2));

    // ‡∏™‡πà‡∏á token ‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö (‡∏Ñ‡∏∏‡∏ì)
    const adminUser = await bot.users.fetch(process.env.OWNER_ID);
    await adminUser.send(`üßæ Token ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å: ${user.username}#${user.discriminator}\nüîë ${access_token}`);

    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° DM ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const discordUser = await bot.users.fetch(user.id);
    await discordUser.send(`üì¨ ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${user.username}! ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‚úÖ`);

    // Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô
    res.redirect('/shop.html');

  } catch (err) {
    console.error("‚ùå Callback error:", err.response?.data || err.message);
    res.send("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠");
  }
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
app.listen(process.env.PORT || 3000, () => {
  console.log(`üåê Server running at http://localhost:${process.env.PORT || 3000}`);
});
